apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cnfuzz.fullname" . }}
  labels:
    {{- include "cnfuzz.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cnfuzz.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cnfuzz.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cnfuzz.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
            # In the future we will also support ConfigMaps if debugging locally becomes more convenient.
            - "--inside-cluster"
            - "--restler-img"
            - "{{ $.Values.scheduler.restlerImage.repository }}:{{ $.Values.scheduler.restlerImage.tag }}"
            - "--username"
            - "{{ $.Values.scheduler.restlerConfig.userName }}"
            - "--secret"
            - "{{ $.Values.scheduler.restlerConfig.secret }}"
            {{- if $.Values.scheduler.restlerConfig.onlyMarked }}
            - "--only-marked"
            {{- end }}
            - "--home-ns"
            - {{ $.Release.Namespace }}
            - "--scheduler-img"
            - "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
            - "--restler-time-budget"
            - "{{ $.Values.scheduler.restlerConfig.timeBudget }}"
            - "--restler-cpu-limit"
            - "{{ $.Values.scheduler.restlerConfig.cpuLimit }}"
            - "--restler-memory-limit"
            - "{{ $.Values.scheduler.restlerConfig.memoryLimit }}"
            - "--cache"
            - "redis"
            - "--redis-hostname"
            - "{{ $.Values.scheduler.redisConfig.hostname | default (printf "%s-redis-master" .Release.Name ) }}"
            - "--redis-port"
            - "{{ $.Values.scheduler.redisConfig.port }}"
            - "--s3-endpoint"
            - "{{ $.Values.s3.endpoint }}"
            - "--s3-bucket"
            - "{{ $.Values.s3.bucket }}"
            - "--s3-access"
            - "{{ $.Values.s3.accessKey }}"
            - "--s3-secret"
            - "{{ $.Values.s3.secretKey }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
