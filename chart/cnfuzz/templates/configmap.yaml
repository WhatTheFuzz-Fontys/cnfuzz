{{- define "cnfuzz.configmapName" -}}
{{ include "cnfuzz.name" . }}-config
{{- end }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cnfuzz.configmapName" . }}
data:
  "auth.py": |
    #!/usr/bin/env python3
    import sys
    print("{'" + sys.argv[1] + "': {  }}")
    print(sys.argv[2])
  "config.yaml": |
    namespace: {{ $.Values.namespace }}
    only_fuzz_marked: {{ $.Values.onlyMarked }}
    configmap_name: {{ include "cnfuzz.configmapName" . }}
    restlerwrapper:
      image:
        image: {{ $.Values.restlerwrapper.image.image }}
        pullPolicy: {{ $.Values.restlerwrapper.image.pullPolicy }}
        tag: {{ $.Values.restlerwrapper.image.tag }}
      restler:
        time_budget: {{ $.Values.restler.timeBudget }}
        cpu_limit: {{ $.Values.restler.resources.limits.cpu }} 
        memory_limit: {{ $.Values.restler.resources.limits.memory }}
        cpu_request: {{ $.Values.restler.resources.requests.cpu }}
        memory_request:  {{ $.Values.restler.resources.requests.memory }}
        telemetry_opt_out: "{{ $.Values.restler.telemetryOptOut }}"
    {{- if $.Values.redis.enabled }}
    cache_solution: redis
    redis:
      host_name: "{{ $.Values.redisCnf.hostName | default (printf "%s-redis-master" .Release.Name ) }}"
      port: {{ $.Values.redisCnf.port }}
    {{ else }}
    cache_solution: in_memory
    {{- end }}
    auth:
      username: "{{ $.Values.auth.userName }}"
      secret: "{{ $.Values.auth.secret }}"
    s3:
      {{- if $.Values.minio.enabled }}
      endpoint_url: "{{ (printf "http://%s-minio:9000" .Release.Name ) }}"
      {{- with (index .Values.minio.buckets 0) }}
      report_bucket: "s3://{{ .name }}"
      {{- end }}
      {{- with (index .Values.minio.users 0) }}
      access_key: "{{ .accessKey }}"
      {{- end }}
      {{- with (index .Values.minio.users 0) }}
      secret_key: "{{ .secretKey }}"
      {{- end }}
      {{ else }}
      endpoint_url: "{{ $.Values.s3.endpoint }}"
      report_bucket: "{{ $.Values.s3.bucket }}"
      access_key: "{{ $.Values.s3.accessKey }}"
      secret_key: "{{ $.Values.s3.secretKey }}"
      {{- end }}
